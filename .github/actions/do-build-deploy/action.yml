name: 'do-build-deploy'
description: 'Bitbake and deploy'
inputs:
  sdk:
    description: 'If set, Create SDK'
    default: 'no'
    required: true
  deploy_path:
    description: 'Name of deploy path on ftp server'
    required: true

runs:
  using: 'composite'
 
  steps:
    - name: 'Build'
      shell: bash
      run: |
        rm -rf build
        source ./env
        bitbake $IMAGE_NAME

    - name: 'Deploy'
      if: ${{inputs.sdk == 'no'}}
      shell: bash
      run: |
        echo "Deploy to $SFTP_PATH"
        echo "   IMAGE_ARTIFACTS: $IMAGE_ARTIFACTS"
        sftp -oBatchMode=yes ${SFTP_USER}@${SFTP_URL} << EOF
        mkdir /${SFTP_PATH}/${GTAG}
        mkdir ${FTP_PATH}
        put ${IMAGE_ARTIFACTS} ${FTP_PATH}/
        quit
        EOF
      env:
        IMAGE_ARTIFACTS: build/tmp-glibc/deploy/images/${{env.MACHINE}}/${{env.IMAGE_NAME}}-${{env.MACHINE}}.rootfs-*
        FTP_PATH: /${{env.SFTP_PATH}}/${{env.GTAG}}/${{inputs.deploy_path}}

    - name: 'Build SDK'
      if: ${{inputs.sdk == 'yes'}}
      shell: bash
      run: |
        source ./env
        bitbake $IMAGE_NAME -c populate_sdk

    - name: 'Deploy with SDK'
      if: ${{inputs.sdk == 'yes'}}
      shell: bash
      run: |
        echo "Deploy to $SFTP_PATH"
        echo "   IMAGE_ARTIFACTS: $IMAGE_ARTIFACTS"
        echo "     SDK_ARTIFACTS: $IMAGE_SDK_ARTIFACTS"
        sftp -oBatchMode=yes ${SFTP_USER}@${SFTP_URL} << EOF
        mkdir /${SFTP_PATH}/${GTAG}
        mkdir ${FTP_PATH}
        put ${IMAGE_ARTIFACTS} ${FTP_PATH}/
        put ${IMAGE_SDK_ARTIFACTS} ${FTP_PATH}/
        quit
        EOF
      env:
        IMAGE_ARTIFACTS: build/tmp-glibc/deploy/images/${{env.MACHINE}}/${{env.IMAGE_NAME}}-${{env.MACHINE}}.rootfs-*
        IMAGE_SDK_ARTIFACTS: build/tmp-glibc/deploy/sdk/oecore-*
        FTP_PATH: /${{env.SFTP_PATH}}/${{env.GTAG}}/${{inputs.deploy_path}}
