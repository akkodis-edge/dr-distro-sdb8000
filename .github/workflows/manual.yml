name: Build sdb8000

on:
  workflow_dispatch:
    inputs:
      sftp_url:
        default: 'ftp.datarespons.com'
        required: true
      sftp_user:
        default: 'dr-solutions-jenkins'
        required: true
      sftp_path:
        default: 'jenkins/sdb8000/image-staging'
        required: true

jobs:
  init:
    runs-on: [ self-hosted, Linux, drse ]
    outputs:
      allocated_runner: ${{ steps.host.outputs.allocated_runner }}
      dl_dir: ${{ steps.host.outputs.dl_dir }}
      sstate_dir: ${{ steps.host.outputs.sstate_dir }}
      gtag: ${{ steps.host.outputs.gtag }}
      docker_image: ${{ steps.container.outputs.docker_image }}
      container_home: ${{ steps.container.outputs.home }}
    steps:
      - name: 'Checkout from git'
        uses: actions/checkout@v4
        with:
          submodules: true
          ssh-known-hosts: ${{ vars.DATARESPONS_KNOWN_HOSTS }}
          ssh-key:  ${{ secrets.SSH_BUILD_KEY }}
          fetch-tags: true
      - name: Setup host
        id: host
        uses: './build-tools/.github/actions/do-host-setup'
      - name: Setup container
        id: container
        uses: './build-tools/.github/actions/do-oe-docker'
        with:
          user: ${{ steps.host.outputs.build_user }}
          uid: ${{ steps.host.outputs.build_uid }}
          gid: ${{ steps.host.outputs.build_gid }}
          docker_tag: "oe-kirkstone:${{ steps.host.outputs.build_user }}"
          docker_url: ${{ steps.host.outputs.docker_url }}
          dockerfile: build-tools/oe-kirkstone-build.docker

  # Build images
  build:
    needs: [ init ]
    runs-on: ${{ needs.init.outputs.allocated_runner }}
    container:
      image: ${{ needs.init.outputs.docker_image }}
      volumes:
        - ${{ needs.init.outputs.dl_dir }}:${{ needs.init.outputs.dl_dir }}
        - ${{ needs.init.outputs.sstate_dir }}:${{ needs.init.outputs.sstate_dir }}
    env:
      DR_BUILD_NO: ${{ github.run_number }}
      DR_BUILD_PLAN: ${{ github.workflow }}
      DR_CM_COMMIT: ${{ needs.init.outputs.gtag }}
      SFTP_URL: ${{ github.event.inputs.sftp_url }}
      SFTP_PATH: "${{ github.event.inputs.sftp_path }}/${{ needs.init.outputs.gtag }}"
      SFTP_USER: ${{ github.event.inputs.sftp_user }}
      DL_DIR: ${{ needs.init.outputs.dl_dir }}
      SSTATE_DIR: ${{ needs.init.outputs.sstate_dir }}
      BB_ENV_PASSTHROUGH_ADDITIONS: >
        DR_BUILD_PLAN
        DR_BUILD_NO
        DR_CM_COMMIT
        DL_DIR
        SSTATE_DIR
    steps:
      - name: 'Add ftp ssh key'
        uses: './build-tools/.github/actions/do-add-ssh-key'
        with:
          home: ${{ needs.init.outputs.container_home }}
          ssh-key: ${{ secrets.ID_DR_BUILD }}
          ssh-key-name: 'id_ftp_deploy'
          ssh-host-name: ${{ env.SFTP_URL }}
          ssh-user: ${{ env.SFTP_USER }}
          ssh-known-hosts: ${{ vars.DATARESPONS_KNOWN_HOSTS }}
      - name: 'Add github ssh key'
        uses: './build-tools/.github/actions/do-add-ssh-key'
        with:
          home: ${{ needs.init.outputs.container_home }}
          ssh-key: ${{ secrets.SSH_BUILD_KEY }}
          ssh-key-name: 'id_github'
          ssh-host-name: 'github.com'
          ssh-user: 'git'
      - name: 'Build service'
        id: 'build-service'
        uses: './build-tools/.github/actions/do-oe-build'
        env:
          MACHINE: 'sdb8000'
          DISTRO: 'datarespons-distro'
        with:
          image: 'service-image'
          build: 'build'
          script: './env'
          sdk: 'yes'
      - name: 'deploy-service'
        uses: './build-tools/.github/actions/do-deploy-sftp'
        with:
          url: ${{ env.SFTP_URL }}
          path: ${{ env.SFTP_PATH }}
          artifacts: ${{ steps.build-service.outputs.image_artifacts }} ${{ steps.build-service.outputs.sdk_artifacts }}
      - name: 'Build service usb'
        id: 'build-service-usb'
        uses: './build-tools/.github/actions/do-oe-build'
        env:
          MACHINE: 'sdb8000'
          DISTRO: 'datarespons-distro'
        with:
          image: 'service-usb'
          build: 'build'
          script: './env'
          sdk: 'no'
      - name: 'deploy-service-usb'
        uses: './build-tools/.github/actions/do-deploy-sftp'
        with:
          url: ${{ env.SFTP_URL }}
          path: ${{ env.SFTP_PATH }}
          artifacts: ${{ steps.build-service-usb.outputs.image_artifacts }}
      - name: 'Build sdb8000'
        id: 'build-sdb8000'
        uses: './build-tools/.github/actions/do-oe-build'
        env:
          MACHINE: 'sdb8000'
          DISTRO: 'datarespons-distro'
        with:
          image: 'sdb8000-image'
          build: 'build'
          script: './env'
          sdk: 'yes'
      - name: 'deploy-sdb8000'
        uses: './build-tools/.github/actions/do-deploy-sftp'
        with:
          url: ${{ env.SFTP_URL }}
          path: ${{ env.SFTP_PATH }}
          artifacts: ${{ steps.build-sdb8000.outputs.image_artifacts }} ${{ steps.build-sdb8000.outputs.sdk_artifacts }}
